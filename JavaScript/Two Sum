/*
Given an array of integers, find two numbers such that they add up to a specific target number.

The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.

You may assume that each input would have exactly one solution.

Input: numbers={2, 7, 11, 15}, target=9
Output: index1=1, index2=2
*/

/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
 //set hash table contain all the numbers as index, and the index in nums as their values
var twoSum=function(nums,target){
    var hash={};
    for(var i=0;i<nums.length;i++){
        hash[nums[i]]=i;
    }
    console.log(hash);
//go through the nums, find an index of hash matchs target-nums[i], then check if they are the same num in nums, if no-->return the first num's index and valuse of second num in hash table  
    for(var j=0;j<nums.length;j++){
        var indexNeed=target-nums[j];
        if(hash.hasOwnProperty(indexNeed)){
            var firstIndex=j+1;
            var secondIndex=hash[indexNeed]+1;
            if(firstIndex != secondIndex){
                return [firstIndex,secondIndex];
            }
        }
    }
}
